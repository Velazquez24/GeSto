{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  name: \"TaskList\",\n  data() {\n    return {\n      tasks: [],\n      newTask: \"\",\n      showAddTaskForm: false\n    };\n  },\n  mounted() {\n    if (this.$route.query.addTask === 'true') {\n      this.showAddTaskForm = true;\n    }\n  },\n  methods: {\n    async fetchTasks() {\n      try {\n        const response = await axios.get('https://dummyjson.com/todos');\n        this.tasks = response.data.todos;\n      } catch (error) {\n        console.error(\"Error al cargar las tareas:\", error);\n      }\n    },\n    addTask() {\n      if (this.newTask.trim()) {\n        // Crear una nueva tarea con un ID único y agregarla a la lista\n        const task = {\n          id: this.tasks.length + 1,\n          todo: this.newTask,\n          completed: false\n        };\n        this.tasks.push(task);\n\n        // Limpiar el campo de entrada y ocultar el formulario\n        this.newTask = \"\";\n        this.showAddTaskForm = false;\n      }\n    },\n    toggleTaskCompletion(task) {\n      task.completed = !task.completed;\n    },\n    deleteTask(task) {\n      this.tasks = this.tasks.filter(t => t.id !== task.id);\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","tasks","newTask","showAddTaskForm","mounted","$route","query","addTask","methods","fetchTasks","response","get","todos","error","console","trim","task","id","length","todo","completed","push","toggleTaskCompletion","deleteTask","filter","t"],"sources":["src/views/TaskList.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <h1>Lista de Tareas</h1>\r\n        <div v-if=\"showAddTaskForm\" class=\"add-task-form\">\r\n            <input v-model=\"newTask\" placeholder=\"Nueva tarea\" />\r\n            <button @click=\"addTask\">Agregar Tarea</button>\r\n        </div>\r\n\r\n        <button @click=\"fetchTasks\">Cargar Tareas</button>\r\n\r\n        <div v-if=\"tasks.length > 0\">\r\n            <div v-for=\"task in tasks\" :key=\"task.id\">\r\n                <div>\r\n                    <h5 :style=\"{ textDecoration: task.completed ? 'line-through' : 'none' }\">{{ task.todo }}</h5>\r\n                    <span>{{ task.completed ? 'Completada' : 'Pendiente' }}</span>\r\n                    <button @click=\"toggleTaskCompletion(task)\">\r\n                        {{ task.completed ? 'Desmarcar' : 'Completar' }}\r\n                    </button>\r\n                    <button @click=\"deleteTask(task)\">Eliminar</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n    name: \"TaskList\",\r\n    data() {\r\n        return {\r\n            tasks: [],\r\n            newTask: \"\",         \r\n            showAddTaskForm: false \r\n        };\r\n    },\r\n    mounted() {\r\n        if (this.$route.query.addTask === 'true') {\r\n            this.showAddTaskForm = true;\r\n        }\r\n    },\r\n    methods: {\r\n        async fetchTasks() {\r\n            try {\r\n                const response = await axios.get('https://dummyjson.com/todos');\r\n                this.tasks = response.data.todos;\r\n            } catch (error) {\r\n                console.error(\"Error al cargar las tareas:\", error);\r\n            }\r\n        },\r\n        addTask() {\r\n            if (this.newTask.trim()) {\r\n                // Crear una nueva tarea con un ID único y agregarla a la lista\r\n                const task = {\r\n                    id: this.tasks.length + 1,\r\n                    todo: this.newTask,\r\n                    completed: false,\r\n                };\r\n                this.tasks.push(task);\r\n\r\n                // Limpiar el campo de entrada y ocultar el formulario\r\n                this.newTask = \"\";\r\n                this.showAddTaskForm = false;\r\n            }\r\n        },\r\n        toggleTaskCompletion(task) {\r\n            task.completed = !task.completed;\r\n        },\r\n        deleteTask(task) {\r\n            this.tasks = this.tasks.filter((t) => t.id !== task.id);\r\n        },\r\n    },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.add-task-form {\r\n    margin-bottom: 20px;\r\n}\r\n</style>\r\n"],"mappings":";AA0BA,OAAAA,KAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,KAAA;MACAC,OAAA;MACAC,eAAA;IACA;EACA;EACAC,QAAA;IACA,SAAAC,MAAA,CAAAC,KAAA,CAAAC,OAAA;MACA,KAAAJ,eAAA;IACA;EACA;EACAK,OAAA;IACA,MAAAC,WAAA;MACA;QACA,MAAAC,QAAA,SAAAZ,KAAA,CAAAa,GAAA;QACA,KAAAV,KAAA,GAAAS,QAAA,CAAAV,IAAA,CAAAY,KAAA;MACA,SAAAC,KAAA;QACAC,OAAA,CAAAD,KAAA,gCAAAA,KAAA;MACA;IACA;IACAN,QAAA;MACA,SAAAL,OAAA,CAAAa,IAAA;QACA;QACA,MAAAC,IAAA;UACAC,EAAA,OAAAhB,KAAA,CAAAiB,MAAA;UACAC,IAAA,OAAAjB,OAAA;UACAkB,SAAA;QACA;QACA,KAAAnB,KAAA,CAAAoB,IAAA,CAAAL,IAAA;;QAEA;QACA,KAAAd,OAAA;QACA,KAAAC,eAAA;MACA;IACA;IACAmB,qBAAAN,IAAA;MACAA,IAAA,CAAAI,SAAA,IAAAJ,IAAA,CAAAI,SAAA;IACA;IACAG,WAAAP,IAAA;MACA,KAAAf,KAAA,QAAAA,KAAA,CAAAuB,MAAA,CAAAC,CAAA,IAAAA,CAAA,CAAAR,EAAA,KAAAD,IAAA,CAAAC,EAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}